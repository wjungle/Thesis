[General]
network = mqtt.Mqtt
#record-eventlog = true
simtime-scale = -6
sim-time-limit = 50s  #1000000s 1000000000s 500000s
#cpu-time-limit = 3s
#repeat = 3



#[Config Default]
Mqtt.sensor[*].timeout = 10s
Mqtt.gw.gateway.timeout = 5s
Mqtt.sensor[*].limit = 3times
Mqtt.gw.gateway.limit = 3times

Mqtt.sensor[*].pubIaTimeExpon = exponential(5s)	#${50, 100}		#1.0/0.1 
Mqtt.sensor[*].pubIaTimeFixed = 1s					#${1,10,60}

# RTT	
Mqtt.sensor[*].out.channel.IaTime = exponential(0.018s) #gamma_d(56.2, 0.000331)
Mqtt.broker.out.channel.IaTime = exponential(0.2s)
Mqtt.gw.port$o[numSensors].channel.IaTime = exponential(0.2s)
Mqtt.gw.port$o[0..].channel.IaTime = exponential(0.018s) #gamma_d(56.2, 0.000331)

#PLR
Mqtt.sensor[*].out.channel.PLR = ${plr=0.05}#0.25, 0.2, 0.15, 0.1, 0.05, 0}
Mqtt.broker.out.channel.PLR = 0.0
Mqtt.gw.port$o[numSensors].channel.PLR = 0.0
Mqtt.gw.port$o[0..].channel.PLR = ${plr}

Mqtt.numSensors = ${nS=1}  #${40..100 step 10}	# ${1, 2, 5, 10..50 step 10}
Mqtt.gw.numSensors = ${nS}

#sensor publish discipline
#0: persistent discipline; 
#1: CoAP discipline
Mqtt.sensor[*].discipline = 1

#rtoInitMethod (sensor method)
#0: fixed RTO; 
#1: random 2~3;
#2: calculated rto, if not sample, init = 1;
#3: calculated rto, if not sample, init = 2;
Mqtt.sensor[*].rtoInitMethod = 1

#rtoMultMethod (sensor method)
#0: fixed
#1: back-off, i.e. *2
#2: dependence with initial rto
Mqtt.sensor[*].rtoMultMethod = 1

#rtoCalcMethod (sensor method)
#0: no operation
#1: 6298
#2: CoCoA+
#3: gateway-assistented
Mqtt.sensor[*].rtoCalcMethod = 0

#gateway method=0: fixed RTO; 
#method=1: back-off; 
#method=2: depend rto init
Mqtt.gw.gateway.method = 0

Mqtt.gw.manager.broadcast = 0

Mqtt.sensor[*].range = ${range=8}
Mqtt.gw.gateway.range=${range}
Mqtt.gw.manager.range=${range}
#**.quanSize = 512 

[Config MQTT-SN]
description = "MQTT-SN protocol"
Mqtt.sensor[*].discipline = 0
Mqtt.sensor[*].rtoInitMethod = 0
Mqtt.sensor[*].rtoMultMethod = 0
Mqtt.sensor[*].rtoCalcMethod = 0
Mqtt.gw.gateway.method = 1

[Config CoAP]
description = "CoAP protocol"
Mqtt.sensor[*].discipline = 1
Mqtt.sensor[*].rtoInitMethod = 1
Mqtt.sensor[*].rtoMultMethod = 1
Mqtt.sensor[*].rtoCalcMethod = 0
Mqtt.gw.gateway.method = 1

[Config RFC6298]
description = "General RFC 6298"
Mqtt.sensor[*].discipline = 1
Mqtt.sensor[*].rtoInitMethod = 2
Mqtt.sensor[*].rtoMultMethod = 1
Mqtt.sensor[*].rtoCalcMethod = 1
Mqtt.gw.gateway.method = 1

[Config CoCoAplus]
description = "CoAP protocol enhanced: CoCoA+"
Mqtt.sensor[*].discipline = 1
Mqtt.sensor[*].rtoInitMethod = 3
Mqtt.sensor[*].rtoMultMethod = 2
Mqtt.sensor[*].rtoCalcMethod = 2
Mqtt.gw.gateway.method = 1

[Config thesis]
description = "thesis: gateway-assistented"
Mqtt.sensor[*].discipline = 1
Mqtt.sensor[*].rtoInitMethod = 3
Mqtt.sensor[*].rtoMultMethod = 2
Mqtt.sensor[*].rtoCalcMethod = 3
Mqtt.gw.gateway.method = 1
Mqtt.gw.manager.broadcast = 2
